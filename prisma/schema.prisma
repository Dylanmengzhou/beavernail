generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(cuid())
  name             String?
  username         String?       @unique
  password         String?
  image            String?
  membershipType   String        @default("free")
  balance          Int?
  securityQuestion String?
  securityAnswer   String?
  nickname         String?
  gender           Gender?
  birthday         DateTime?
  lastLoginAt      DateTime?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  email            String?
  emailVerified    DateTime?
  provider         String
  contactType      String?
  altContact       String?
  altContactType   String?
  accounts         Account[]
  reservations     Reservation[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Reservation {
  id            String      @id @default(cuid())
  date          DateTime
  timeSlot      String
  userId        String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  nailArtistId  String?
  note          String?
  currentMemberShip String?
  paymentMethod String?     @default("cash")
  uploadImage   String?
  ocrResult     Boolean?
  finalPrice    Int?
  currency      String?
  depositPaid   Boolean?
  nailArtist    NailArtist? @relation(fields: [nailArtistId], references: [id])
  user          User        @relation(fields: [userId], references: [id])

  @@unique([date, timeSlot, nailArtistId])
}

model NailArtist {
  id           String        @id @default(cuid())
  name         String        @unique
  role         String        @default("L6")
  account      String?
  password     String?
  membertype   String?
  reservations Reservation[]
}

enum Gender {
  MALE
  FEMALE
}
